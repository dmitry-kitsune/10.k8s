name: Check Pod Status and Notify Slack

on:
  schedule:
    - cron: '*/30 * * * *'  # Runs every 30 minutes
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  check-pods:
    runs-on: ubuntu-latest
    #env:
    #  STATE_ENV_K3S: ${{ steps.check_pods_k3s.STATE_ENV_K3S }}
    # STATE_ENV_K8S: ${{ steps.check_pods_k8s.env.STATE_ENV_K8S }}
    #  FAILED_PODS_K3S: ${{steps.check_pods_k3s.FAILED_PODS_K3S}}
    #  FAILED_PODS_K8S: ${{steps.check_pods_k8s.FAILED_PODS_K8S}}
    steps:
      - uses: actions/checkout@v3

      # Check for failed pods in K3S cluster
      - name: Check for failed pods in K3S cluster
        id: check_pods_k3s
        uses: appleboy/ssh-action@v1.1.0
        with:
          proxy_host: ${{ secrets.JUMPHOST_IP }}
          proxy_port: ${{ secrets.JUMPHOST_PORT }}
          proxy_username: ${{ secrets.JUMPHOST_USER }}
          proxy_password: ${{ secrets.JUMPHOST_PASS }}
          host: ${{ secrets.K3S_SERVER_IP }}
          username: ${{ secrets.KS_SERVER_USER }}
          password: ${{ secrets.KS_SERVER_PASS }}
          script: |
            # Ensure jq is installed
            if ! command -v jq &> /dev/null; then
              sudo apt-get update && sudo apt-get install -y jq
            fi
            
            # Set up kubeconfig for K3S
            mkdir -p ~/.kube
            echo "${{ secrets.KUBECONFIG_K3S }}" > ~/.kube/config
            export KUBECONFIG=~/.kube/config

            # Initialize state variables
            STATUS="Error"
            FAILED_PODS=""
            
            # Get the pod statuses and print them
            STATUS_ARRAY_K3S=$(kubectl get pods -A)
            ERROR_ARRAY_K3S=$(kubectl get pods -A | grep -iE "$STATUS")
            echo "$STATUS_ARRAY_K3S"
            echo "DEBUG for ERROR_ARRAY_K3S"
            echo "$ERROR_ARRAY_K3S"

            # Check if STATUS_ARRAY_K3S contains "Error" (case insensitive)
            if [[ -z "$ERROR_ARRAY_K3S" ]]; then
              echo "GOING HERE!!"
              echo "No failed pods found in K3S!"
              # No failed pods found
              FAILED_PODS="No failed pods in K3S"
              echo "STATE_ENV_K3S=FALSE" >> ${GITHUB_ENV}
              echo "$FAILED_PODS"
              echo "FAILED_PODS_K3S=$FAILED_PODS" >> ${GITHUB_ENV}
            else
              # Failed pods found
             echo "Failed pods found in K3S!"
              FAILED_PODS=$(echo "$STATUS_ARRAY_K3S" | grep -i "Error" | tr '\n' ';' | sed 's/;$/;/' )
              echo "STATE_ENV_K3S=TRUE" >> ${GITHUB_ENV}
              echo "DEBUG: FAILED_PODS_K3S before write: $FAILED_PODS"
              echo "FAILED_PODS_K3S=$FAILED_PODS" >> ${GITHUB_ENV}
            fi

             # Debugging after setting the variables
            echo "DEBUG: FAILED_PODS_K3S=$FAILED_PODS"
            echo "DEBUG: STATE_ENV_K3S=$(grep STATE_ENV_K3S $GITHUB_ENV)"

       # Debug step to verify environment variables
      - name: Debug Environment Variables k3s
        run: |
          echo "FAILED_PODS_K3S: $FAILED_PODS_K3S"
          echo "STATE_ENV_K3S: $STATE_ENV_K3S"

      # Send Slack Notification for K3S Error Pods
      - name: Send Slack Notification for K3S Error Pods
        #if: env.FAILED_PODS_K3S != 'No failed pods in K3S'
        if: env.STATE_ENV_K3S == 'TRUE'
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "fallback": "Attention: The following pods in K3S are in Error state.",
                  "pretext": "Attention: The following pods in K3S are in Error state.",
                  "color": "#D00000",
                  "fields": [
                    {
                      "title": "K3S Error Pods",
                      "value": "${{ env.FAILED_PODS_K3S }}",
                      "short": false
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      # Send Slack Notification for K3S Successful Status
      - name: Send Slack Notification for K3S Successful Status
        # if: env.FAILED_PODS_K3S == 'No failed pods in K3S'
        if: env.STATE_ENV_K3S == 'FALSE'
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "fallback": "Good News: All pods are running smoothly in K3S.",
                  "pretext": "Good News: All pods are running smoothly in K3S.",
                  "color": "#36A64F",
                  "fields": [
                    {
                      "title": "K3S Status",
                      "value": "All pods are running smoothly in K3S.",
                      "short": false
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      # Check for failed pods in K8S cluster
      - name: Check for failed pods in K8S cluster
        id: check_pods_k8s
        uses: appleboy/ssh-action@v1.1.0
        with:
          proxy_host: ${{ secrets.JUMPHOST_IP }}
          proxy_port: ${{ secrets.JUMPHOST_PORT }}
          proxy_username: ${{ secrets.JUMPHOST_USER }}
          proxy_password: ${{ secrets.JUMPHOST_PASS }}
          host: ${{ secrets.K8S_SERVER_IP }}
          username: ${{ secrets.KS_SERVER_USER }}
          password: ${{ secrets.KS_SERVER_PASS }}
          script: |
            # Ensure jq is installed
            if ! command -v jq &> /dev/null; then
              sudo apt-get update && sudo apt-get install -y jq
            fi

            # Set up kubeconfig for K8S
            mkdir -p ~/.kube
            echo "${{ secrets.KUBECONFIG_K8S }}" > ~/.kube/config
            export KUBECONFIG=~/.kube/config

            # Initialize state variables
            STATUS="Error"
            FAILED_PODS=""
            
            # Get the pod statuses and print them for k8s
            STATUS_ARRAY_K8S=$(kubectl get pods -A)
            ERROR_ARRAY_K8S=$(kubectl get pods -A | grep -iE "$STATUS")
            echo "$STATUS_ARRAY_K8S"
            echo "DEBUG for ERROR_ARRAY_K8S"
            echo "$ERROR_ARRAY_K8S"

            # Check if STATUS_ARRAY_K8S contains "Error" (case insensitive)
            if [[ -z "$ERROR_ARRAY_K8S" ]]; then
                echo "No failed pods found in K8S"
                # No failed pods found
                FAILED_PODS="No failed pods in K8S"
                echo "STATE_ENV_K8S=FALSE" >> $GITHUB_ENV
                echo "$FAILED_PODS"
                echo "FAILED_PODS_K8S=$FAILED_PODS" >> $GITHUB_ENV
            else
                # Failed pods found
                echo "Failed pods found in K8S!"
                FAILED_PODS=$(echo "$STATUS_ARRAY_K8S" | grep -i "Error" | tr '\n' ';' | sed 's/;$/;/' )
                echo "STATE_ENV=TRUE" >> $GITHUB_ENV
                echo "DEBUG: FAILED_PODS_K8S before write: $FAILED_PODS"
                echo "FAILED_PODS_K8S=$FAILED_PODS" >> $GITHUB_ENV
            fi
            
             # Debugging after setting the variables
            echo "DEBUG: FAILED_PODS_K8S=$FAILED_PODS"
            echo "DEBUG: STATE_ENV_K8S=$(cat $GITHUB_ENV | grep STATE_ENV_K8S)"

       # Debug step to verify environment variables
      - name: Debug Environment Variables K8S
        run: |
          echo "FAILED_PODS_K8S: ${FAILED_PODS_K8S}"
          echo "DEBUG: STATE_ENV_K8S=$(grep STATE_ENV_K3S ${GITHUB_ENV})"

      # Send Slack Notification for K8S Error Pods
      - name: Send Slack Notification for K8S Error Pods
        if: env.STATE_ENV_K8S == 'TRUE'
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "fallback": "Attention: The following pods in K8S are in Error state.",
                  "pretext": "Attention: The following pods in K8S are in Error state.",
                  "color": "#D00000",
                  "fields": [
                    {
                      "title": "K8S Error Pods",
                      "value": "${{ env.FAILED_PODS_K8S }}",
                      "short": false
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      # Send Slack Notification for K8S Successful Status
      - name: Send Slack Notification for K8S Successful Status
        if: env.STATE_ENV_K8S == 'FALSE'
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "fallback": "Good News: All pods are running smoothly in K8S.",
                  "pretext": "Good News: All pods are running smoothly in K8S.",
                  "color": "#36A64F",
                  "fields": [
                    {
                      "title": "K8S Status",
                      "value": "All pods are running smoothly in K8S.",
                      "short": false
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
